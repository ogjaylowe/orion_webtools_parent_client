{"ast":null,"code":"import _classCallCheck from\"/Users/administrator/Projects/school_tools_frontend_fresh/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/administrator/Projects/school_tools_frontend_fresh/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/administrator/Projects/school_tools_frontend_fresh/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/administrator/Projects/school_tools_frontend_fresh/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import LoginMenu from'./LoginMenu.js';import ParentView from\"./ParentView.js\";import CollectionForm from'./CollectionForm.js';import configValues from'../config.js';// React libraries\nimport{BrowserRouter as Router,Switch,Route,Link}from\"react-router-dom\";//// **** INITIALIZATIONS **** ////\n// sets up the uniqid hashing function for use with component id's\nvar uniqid=require('uniqid');// TODO: add a link to the 'home' route from here so that\n// users land on / and can't leave in the form of a conditional\n// rendering function (call ParentView on success with StudentID passed in)\n// goal: parents start in login menu, upon success something allows them into the\n// parent view with the StudentID as a prop\nvar ParentClient=/*#__PURE__*/function(_React$Component){_inherits(ParentClient,_React$Component);var _super=_createSuper(ParentClient);function ParentClient(){var _this;_classCallCheck(this,ParentClient);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={username:\"\",password:\"\",loginState:\"\",parent:false};return _this;}_createClass(ParentClient,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;console.log(\"mount \",this.state.parent);this.setState({loginState:/*#__PURE__*/React.createElement(CollectionForm,null,/*#__PURE__*/React.createElement(LoginMenu,{callbackButton:function callbackButton(){return _this2.authCheck();},callbackOnChangeUsername:function callbackOnChangeUsername(event){return _this2.updateUsernameState(event);},callbackOnChangePassword:function callbackOnChangePassword(event){return _this2.updatePasswordState(event);}}))});}// updates the state on keystroke change\n},{key:\"updateUsernameState\",value:function updateUsernameState(event){this.setState({username:event.target.value});}},{key:\"updatePasswordState\",value:function updatePasswordState(event){this.setState({password:event.target.value});}// TODO: update the fetch to search for a parent username and password!\n},{key:\"authCheck\",value:function authCheck(){var _this3=this;fetch(configValues.serverURL+\"/parents\",{method:'POST',headers:new Headers({'Content-Type':'application/json'}),body:JSON.stringify({username:this.state.username,password:this.state.password})}).then(function(res){return res.json();}).then(function(parent){if(parent!=false){console.log(\"auth\",parent);_this3.setState({parent:parent});}}).then(function(){return _this3.conditionalCheck();});}// performs auth check\n},{key:\"conditionalCheck\",value:function conditionalCheck(){//console.log(this.state)\n// TODO: instead of using false here, make a prop in parent called userType and have it = parent\nif(this.state.parent!=false){this.setState({loginState:/*#__PURE__*/React.createElement(ParentView,{studentId:this.state.parent.student})});}else{alert(this.state.condition+\" is not a registered username!\");}}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(Router,null,/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{path:\"/\"},this.state.loginState))));}}]);return ParentClient;}(React.Component);export default ParentClient;","map":{"version":3,"sources":["/Users/administrator/Projects/school_tools_frontend_fresh/src/components/ParentClient.js"],"names":["React","LoginMenu","ParentView","CollectionForm","configValues","BrowserRouter","Router","Switch","Route","Link","uniqid","require","ParentClient","state","username","password","loginState","parent","console","log","setState","authCheck","event","updateUsernameState","updatePasswordState","target","value","fetch","serverURL","method","headers","Headers","body","JSON","stringify","then","res","json","conditionalCheck","student","alert","condition","Component"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport LoginMenu from './LoginMenu.js';\nimport ParentView from \"./ParentView.js\";\n\nimport CollectionForm from './CollectionForm.js'\n\nimport configValues from '../config.js';\n\n\n// React libraries\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\n//// **** INITIALIZATIONS **** ////\n// sets up the uniqid hashing function for use with component id's\nvar uniqid = require('uniqid');\n\n\n// TODO: add a link to the 'home' route from here so that\n// users land on / and can't leave in the form of a conditional\n// rendering function (call ParentView on success with StudentID passed in)\n\n// goal: parents start in login menu, upon success something allows them into the\n// parent view with the StudentID as a prop\n\nclass ParentClient extends React.Component {\n    state = { username: \"\", password: \"\", loginState: \"\", parent: false }\n\n    componentDidMount() {\n        console.log(\"mount \", this.state.parent)\n        this.setState({\n            loginState:\n                <CollectionForm >\n                    <LoginMenu\n                        callbackButton={() => this.authCheck()}\n                        callbackOnChangeUsername={(event) => this.updateUsernameState(event)}\n                        callbackOnChangePassword={(event) => this.updatePasswordState(event)}\n                    />\n                </CollectionForm>\n        })\n    }\n\n    // updates the state on keystroke change\n    updateUsernameState(event) {\n        this.setState({ username: event.target.value })\n    }\n\n    updatePasswordState(event) {\n        this.setState({ password: event.target.value })\n    }\n\n    // TODO: update the fetch to search for a parent username and password!\n    authCheck() {\n        fetch(configValues.serverURL + \"/parents\", {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify({ username: this.state.username, password: this.state.password })\n        })\n            .then(res => res.json())\n            .then(parent => {\n                if (parent != false) {\n                    console.log(\"auth\", parent)\n                    this.setState({ parent })\n                }\n            })\n            .then(() => this.conditionalCheck())\n    }\n\n    // performs auth check\n    conditionalCheck() {\n        //console.log(this.state)\n        // TODO: instead of using false here, make a prop in parent called userType and have it = parent\n        if (this.state.parent != false) {\n            this.setState({ loginState: <ParentView studentId={this.state.parent.student} /> })\n        } else {\n            alert(this.state.condition + \" is not a registered username!\")\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    <Switch>\n                        <Route path=\"/\" >\n                            {this.state.loginState}\n                        </Route>\n                    </Switch>\n                </Router>\n            </div >\n        )\n    }\n}\n\nexport default ParentClient"]},"metadata":{},"sourceType":"module"}