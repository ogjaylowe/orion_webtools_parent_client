{"ast":null,"code":"var _jsxFileName = \"/Users/administrator/Projects/orion_webtools_parent_client/src/components/ParentClient.js\";\nimport React from 'react';\nimport LoginMenu from './LoginMenu.js';\nimport ParentView from \"./ParentView.js\";\nimport CollectionForm from './CollectionForm.js';\nimport configValues from '../config.js'; // React libraries\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"; //// **** INITIALIZATIONS **** ////\n// sets up the uniqid hashing function for use with component id's\n\nvar uniqid = require('uniqid');\n\nvar Loader = require('react-loader'); // TODO: add a link to the 'home' route from here so that\n// users land on / and can't leave in the form of a conditional\n// rendering function (call ParentView on success with StudentID passed in)\n// goal: parents start in login menu, upon success something allows them into the\n// parent view with the StudentID as a prop\n\n\nclass ParentClient extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loginState: \"\",\n      parent: false,\n      loaded: true\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"mount \", this.state.parent);\n    this.setState({\n      loginState: /*#__PURE__*/React.createElement(CollectionForm, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(LoginMenu, {\n        callbackButton: () => this.authCheck(),\n        callbackOnChangeUsername: event => this.updateUsernameState(event),\n        callbackOnChangePassword: event => this.updatePasswordState(event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }))\n    });\n  } // updates the state on keystroke change\n\n\n  updateUsernameState(event) {\n    this.setState({\n      username: event.target.value\n    });\n  }\n\n  updatePasswordState(event) {\n    this.setState({\n      password: event.target.value\n    });\n  } // TODO: update the fetch to search for a parent username and password!\n\n\n  async authCheck() {\n    this.setState({\n      loaded: false\n    });\n    await fetch(configValues.serverURL + \"/parents\", {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password\n      })\n    }).then(res => res.json()).then(parent => {\n      if (parent != false) {\n        console.log(\"auth\", parent);\n        this.setState({\n          parent\n        });\n      }\n    }).then(() => this.conditionalCheck());\n    await this.setState({\n      loaded: true\n    });\n  } // performs auth check\n\n\n  conditionalCheck() {\n    //console.log(this.state)\n    // TODO: instead of using false here, make a prop in parent called userType and have it = parent\n    if (this.state.parent != false) {\n      this.setState({\n        loginState: /*#__PURE__*/React.createElement(ParentView, {\n          studentId: this.state.parent.student,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 41\n          }\n        })\n      });\n    } else {\n      alert(this.state.condition + \" is not a registered username!\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      loaded: this.state.loaded,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }, this.state.loginState)))));\n  }\n\n}\n\nexport default ParentClient;","map":{"version":3,"sources":["/Users/administrator/Projects/orion_webtools_parent_client/src/components/ParentClient.js"],"names":["React","LoginMenu","ParentView","CollectionForm","configValues","BrowserRouter","Router","Switch","Route","Link","uniqid","require","Loader","ParentClient","Component","state","username","password","loginState","parent","loaded","componentDidMount","console","log","setState","authCheck","event","updateUsernameState","updatePasswordState","target","value","fetch","serverURL","method","headers","Headers","body","JSON","stringify","then","res","json","conditionalCheck","student","alert","condition","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AAEA,OAAOC,cAAP,MAA2B,qBAA3B;AAEA,OAAOC,YAAP,MAAyB,cAAzB,C,CAIA;;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,IAJJ,QAKO,kBALP,C,CAOA;AACA;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,cAAD,CAApB,C,CAGA;AACA;AACA;AAEA;AACA;;;AAEA,MAAME,YAAN,SAA2Bb,KAAK,CAACc,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,QAAQ,EAAE,EAA1B;AAA8BC,MAAAA,UAAU,EAAE,EAA1C;AAA8CC,MAAAA,MAAM,EAAE,KAAtD;AAA6DC,MAAAA,MAAM,EAAE;AAArE,KAD+B;AAAA;;AAKvCC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKR,KAAL,CAAWI,MAAjC;AACA,SAAKK,QAAL,CAAc;AACVN,MAAAA,UAAU,eACN,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AACI,QAAA,cAAc,EAAE,MAAM,KAAKO,SAAL,EAD1B;AAEI,QAAA,wBAAwB,EAAGC,KAAD,IAAW,KAAKC,mBAAL,CAAyBD,KAAzB,CAFzC;AAGI,QAAA,wBAAwB,EAAGA,KAAD,IAAW,KAAKE,mBAAL,CAAyBF,KAAzB,CAHzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAFM,KAAd;AAUH,GAjBsC,CAmBvC;;;AACAC,EAAAA,mBAAmB,CAACD,KAAD,EAAQ;AACvB,SAAKF,QAAL,CAAc;AAAER,MAAAA,QAAQ,EAAEU,KAAK,CAACG,MAAN,CAAaC;AAAzB,KAAd;AACH;;AAEDF,EAAAA,mBAAmB,CAACF,KAAD,EAAQ;AACvB,SAAKF,QAAL,CAAc;AAAEP,MAAAA,QAAQ,EAAES,KAAK,CAACG,MAAN,CAAaC;AAAzB,KAAd;AACH,GA1BsC,CA4BvC;;;AACA,QAAML,SAAN,GAAkB;AACd,SAAKD,QAAL,CAAc;AAAEJ,MAAAA,MAAM,EAAE;AAAV,KAAd;AAEA,UAAMW,KAAK,CAAC3B,YAAY,CAAC4B,SAAb,GAAyB,UAA1B,EAAsC;AAC7CC,MAAAA,MAAM,EAAE,MADqC;AAE7CC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AAAE,wBAAgB;AAAlB,OAAZ,CAFoC;AAG7CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEtB,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAvB;AAAiCC,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAAtD,OAAf;AAHuC,KAAtC,CAAL,CAKDsB,IALC,CAKIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALX,EAMDF,IANC,CAMIpB,MAAM,IAAI;AACZ,UAAIA,MAAM,IAAI,KAAd,EAAqB;AACjBG,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,MAApB;AACA,aAAKK,QAAL,CAAc;AAAEL,UAAAA;AAAF,SAAd;AACH;AACJ,KAXC,EAYDoB,IAZC,CAYI,MAAM,KAAKG,gBAAL,EAZV,CAAN;AAcA,UAAM,KAAKlB,QAAL,CAAc;AAACJ,MAAAA,MAAM,EAAE;AAAT,KAAd,CAAN;AACH,GA/CsC,CAiDvC;;;AACAsB,EAAAA,gBAAgB,GAAG;AACf;AACA;AACA,QAAI,KAAK3B,KAAL,CAAWI,MAAX,IAAqB,KAAzB,EAAgC;AAC5B,WAAKK,QAAL,CAAc;AAAEN,QAAAA,UAAU,eAAE,oBAAC,UAAD;AAAY,UAAA,SAAS,EAAE,KAAKH,KAAL,CAAWI,MAAX,CAAkBwB,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAd,OAAd;AACH,KAFD,MAEO;AACHC,MAAAA,KAAK,CAAC,KAAK7B,KAAL,CAAW8B,SAAX,GAAuB,gCAAxB,CAAL;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,KAAK/B,KAAL,CAAWK,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKL,KAAL,CAAWG,UADhB,CADJ,CADJ,CADJ,CADJ,CADJ;AAaH;;AA1EsC;;AA6E3C,eAAeL,YAAf","sourcesContent":["import React from 'react'\n\nimport LoginMenu from './LoginMenu.js';\nimport ParentView from \"./ParentView.js\";\n\nimport CollectionForm from './CollectionForm.js'\n\nimport configValues from '../config.js';\n\n\n\n// React libraries\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\n//// **** INITIALIZATIONS **** ////\n// sets up the uniqid hashing function for use with component id's\nvar uniqid = require('uniqid');\nvar Loader = require('react-loader');\n\n\n// TODO: add a link to the 'home' route from here so that\n// users land on / and can't leave in the form of a conditional\n// rendering function (call ParentView on success with StudentID passed in)\n\n// goal: parents start in login menu, upon success something allows them into the\n// parent view with the StudentID as a prop\n\nclass ParentClient extends React.Component {\n    state = { username: \"\", password: \"\", loginState: \"\", parent: false, loaded: true }\n\n    \n\n    componentDidMount() {\n        console.log(\"mount \", this.state.parent)\n        this.setState({\n            loginState:\n                <CollectionForm >\n                    <LoginMenu\n                        callbackButton={() => this.authCheck()}\n                        callbackOnChangeUsername={(event) => this.updateUsernameState(event)}\n                        callbackOnChangePassword={(event) => this.updatePasswordState(event)}\n                    />\n                </CollectionForm>\n        })\n    }\n\n    // updates the state on keystroke change\n    updateUsernameState(event) {\n        this.setState({ username: event.target.value })\n    }\n\n    updatePasswordState(event) {\n        this.setState({ password: event.target.value })\n    }\n\n    // TODO: update the fetch to search for a parent username and password!\n    async authCheck() {\n        this.setState({ loaded: false })\n\n        await fetch(configValues.serverURL + \"/parents\", {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify({ username: this.state.username, password: this.state.password })\n        })\n            .then(res => res.json())\n            .then(parent => {\n                if (parent != false) {\n                    console.log(\"auth\", parent)\n                    this.setState({ parent })\n                }\n            })\n            .then(() => this.conditionalCheck())\n\n        await this.setState({loaded: true})\n    }\n\n    // performs auth check\n    conditionalCheck() {\n        //console.log(this.state)\n        // TODO: instead of using false here, make a prop in parent called userType and have it = parent\n        if (this.state.parent != false) {\n            this.setState({ loginState: <ParentView studentId={this.state.parent.student} /> })\n        } else {\n            alert(this.state.condition + \" is not a registered username!\")\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    <Switch>\n                        <Route path=\"/\" >\n                            <Loader loaded={this.state.loaded}>\n                                {this.state.loginState}\n                            </Loader>\n                        </Route>\n                    </Switch>\n                </Router>\n            </div >\n        )\n    }\n}\n\nexport default ParentClient"]},"metadata":{},"sourceType":"module"}