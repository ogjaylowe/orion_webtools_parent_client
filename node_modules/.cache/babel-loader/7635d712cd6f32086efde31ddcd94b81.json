{"ast":null,"code":"import _regeneratorRuntime from\"/Users/administrator/Projects/school_tools_frontend_fresh/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/administrator/Projects/school_tools_frontend_fresh/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/administrator/Projects/school_tools_frontend_fresh/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/administrator/Projects/school_tools_frontend_fresh/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/administrator/Projects/school_tools_frontend_fresh/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/administrator/Projects/school_tools_frontend_fresh/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import LoginMenu from'./LoginMenu.js';import AdminView from\"./AdminView.js\";import CollectionForm from'./CollectionForm.js';import configValues from\"../config.js\";// React libraries\nimport{BrowserRouter as Router,Switch,Route,Link}from\"react-router-dom\";//// **** INITIALIZATIONS **** ////\n// sets up the uniqid hashing function for use with component id's\nvar uniqid=require('uniqid');var Loader=require('react-loader');// TODO: add a link to the 'home' route from here so that\n// users land on / and can't leave in the form of a conditional\n// rendering function (call ParentView on success with StudentID passed in)\n// goal: parents start in login menu, upon success something allows them into the\n// parent view with the StudentID as a prop\nvar AdminClient=/*#__PURE__*/function(_React$Component){_inherits(AdminClient,_React$Component);var _super=_createSuper(AdminClient);function AdminClient(){var _this;_classCallCheck(this,AdminClient);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={username:\"\",password:\"\",loginState:\"\",admin:false,loaded:true};return _this;}_createClass(AdminClient,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.setState({loginState:/*#__PURE__*/React.createElement(CollectionForm,null,/*#__PURE__*/React.createElement(LoginMenu,{callbackButton:function callbackButton(){return _this2.authCheck();},callbackOnChangeUsername:function callbackOnChangeUsername(event){return _this2.updateUsernameState(event);},callbackOnChangePassword:function callbackOnChangePassword(event){return _this2.updatePasswordState(event);}}))});}// updates the state on keystroke change\n},{key:\"updateUsernameState\",value:function updateUsernameState(event){this.setState({username:event.target.value});}},{key:\"updatePasswordState\",value:function updatePasswordState(event){this.setState({password:event.target.value});}// TODO: update the fetch to search for a parent username and password!\n},{key:\"authCheck\",value:function(){var _authCheck=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _this3=this;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"authcheck started, update finished9!\",configValues.serverURL);_context.next=3;return fetch(configValues.serverURL+\"/admin\",{method:'POST',headers:{'Content-Type':'application/json','Accept':'application/json','Origin':'https://ogjaylowe.github.io'},body:JSON.stringify({username:this.state.username,password:this.state.password})}).then(function(res){return res.json();}).then(function(admin){console.log(admin);if(admin!=false){_this3.setState({admin:admin});}}).then(function(){return _this3.conditionalCheck();});case 3:case\"end\":return _context.stop();}}},_callee,this);}));function authCheck(){return _authCheck.apply(this,arguments);}return authCheck;}()// performs auth check\n},{key:\"conditionalCheck\",value:function conditionalCheck(){if(this.state.admin!=false){this.setState({loginState:/*#__PURE__*/React.createElement(AdminView,null)});}else{alert(this.state.condition+\" is not a registered username!\");}}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(Router,null,/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{path:\"/\"},/*#__PURE__*/React.createElement(Loader,{loaded:this.state.loaded},this.state.loginState)))));}}]);return AdminClient;}(React.Component);export default AdminClient;","map":{"version":3,"sources":["/Users/administrator/Projects/school_tools_frontend_fresh/src/components/AdminClient.js"],"names":["React","LoginMenu","AdminView","CollectionForm","configValues","BrowserRouter","Router","Switch","Route","Link","uniqid","require","Loader","AdminClient","state","username","password","loginState","admin","loaded","setState","authCheck","event","updateUsernameState","updatePasswordState","target","value","console","log","serverURL","fetch","method","headers","body","JSON","stringify","then","res","json","conditionalCheck","alert","condition","Component"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport LoginMenu from './LoginMenu.js';\nimport AdminView from \"./AdminView.js\";\n\nimport CollectionForm from './CollectionForm.js'\n\nimport configValues from \"../config.js\"\n\n\n// React libraries\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\n//// **** INITIALIZATIONS **** ////\n// sets up the uniqid hashing function for use with component id's\nvar uniqid = require('uniqid');\nvar Loader = require('react-loader');\n\n\n\n// TODO: add a link to the 'home' route from here so that\n// users land on / and can't leave in the form of a conditional\n// rendering function (call ParentView on success with StudentID passed in)\n\n// goal: parents start in login menu, upon success something allows them into the\n// parent view with the StudentID as a prop\n\nclass AdminClient extends React.Component {\n    state = { username: \"\", password: \"\", loginState: \"\", admin: false, loaded: true }\n\n    componentDidMount() {\n        this.setState({\n            loginState:\n                <CollectionForm >\n                    <LoginMenu\n                        callbackButton={() => this.authCheck()}\n                        callbackOnChangeUsername={(event) => this.updateUsernameState(event)}\n                        callbackOnChangePassword={(event) => this.updatePasswordState(event)}\n                    />\n                </CollectionForm>\n        })\n    }\n\n    // updates the state on keystroke change\n    updateUsernameState(event) {\n        this.setState({ username: event.target.value })\n    }\n\n    updatePasswordState(event) {\n        this.setState({ password: event.target.value })\n    }\n\n    // TODO: update the fetch to search for a parent username and password!\n    async authCheck() {\n        console.log(\"authcheck started, update finished9!\", configValues.serverURL)\n\n        await fetch(configValues.serverURL + \"/admin\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Origin': 'https://ogjaylowe.github.io'\n            },\n            body: JSON.stringify({ username: this.state.username, password: this.state.password })\n        })\n            .then(res => res.json())\n            .then(admin => {\n                console.log(admin)\n                if (admin != false) {\n                    this.setState({ admin })\n                }\n            })\n            .then(() => this.conditionalCheck())\n    }\n\n    // performs auth check\n    conditionalCheck() {\n        if (this.state.admin != false) {\n            this.setState({ loginState: <AdminView /> })\n        } else {\n            alert(this.state.condition + \" is not a registered username!\")\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    <Switch>\n                        <Route path=\"/\" >\n                            <Loader loaded={this.state.loaded}>\n                                {this.state.loginState}\n                            </Loader>\n                        </Route>\n                    </Switch>\n                </Router>\n            </div >\n        )\n    }\n}\n\nexport default AdminClient"]},"metadata":{},"sourceType":"module"}