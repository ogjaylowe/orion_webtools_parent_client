{"version":3,"sources":["components/LoginMenu.js","components/CollectionForm.js","components/Selector.js","config.js","components/ParentHomebriding.js","components/ParentDetentionCenterView.js","components/ParentHomeworkClubView.js","components/ParentView.js","components/ParentClient.js","App.js","index.js"],"names":["LoginMenu","require","state","className","htmlFor","id","type","placeholder","onChange","this","props","callbackOnChangeUsername","callbackOnChangePassword","size","onPress","callbackButton","React","Component","CollectionForm","uk-grid","collectionLegend","children","uniqid","Selector","elements","arrayToMap","configObjectValue","labelText","callbackFunction","defaultValue","map","element","value","configValues","students","homeworkClubHeaders","times","classes","periods","serverURL","ParentHomebriding","student","hours","displayedHours","fetch","method","headers","Headers","body","JSON","stringify","studentId","then","res","json","setState","totalHours","document","querySelector","hoursUpdate","Swal","fire","title","text","timer","timerProgressBar","onBeforeOpen","showLoading","returnToLogin","fname","lname","onClick","parseInt","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","updateHours","setHours","ParentView","Loader","ParentClient","username","password","loginState","parent","loaded","console","log","authCheck","event","updateUsernameState","updatePasswordState","target","conditionalCheck","alert","condition","path","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.31ed0025.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { AwesomeButton } from 'react-awesome-button';\nimport AwesomeButtonStyles from \"react-awesome-button/src/styles/styles.scss\";\n\n\n\nvar Loader = require('react-loader');\n\n\n\nclass LoginMenu extends React.Component {\n    state = {}\n\n    render() {\n        return (\n            <div className=\"uk-width-1-1\">\n\n                <div>\n                    <br />\n                    <br />\n                    <p className=\"uk-text-lead\">Orion Academy Webtools and Database</p>\n\n                    <br />\n                    <br />\n                    <div>\n                        <label htmlFor=\"userName\">Username: </label>\n                        <input\n                            className=\"uk-input uk-form uk-form-width-medium uk-margin-right uk-margin-left\"\n                            id=\"userName\"\n                            type=\"text\"\n                            placeholder=\"Username\"\n                            onChange={this.props.callbackOnChangeUsername}\n                        />\n                        <label htmlFor=\"pwd\">Password: </label>\n                        <input\n                            className=\"uk-input uk-form uk-form-width-medium uk-margin-right uk-margin-left\"\n                            id=\"Pwd\"\n                            type=\"text\"\n                            placeholder=\"Password\"\n                            onChange={this.props.callbackOnChangePassword}\n                        />\n\n                        <AwesomeButton\n                            id=\"awesome button\"\n                            size={'large'}\n                            type=\"primary\"\n                            onPress={this.props.callbackButton}\n                        >\n                            Log In\n                        </AwesomeButton>\n                        \n\n                    </div>\n                    <br />\n                    <br />\n                    <p className=\"uk-text-medium uk-margin-top uk-margin-bottom\">Don't have a username and password, or forgot yours? Email your student's homeroom teacher for assistance!</p>\n                    <p className=\"uk-text-meta uk-margin-top uk-margin-bottom\">Students must complete 350 hours of homebriding activity to fufill the physical education requirement. Log in to see your student's progress.</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LoginMenu;\n\n","import React from \"react\";\n\n\nfunction CollectionForm(props) {\n    return (\n        <div className=\"uk-flex uk-flex-center\" uk-grid=\"true\">\n            <div>\n                \n                    <fieldset className=\"uk-fieldset\">\n\n                        <legend className=\"uk-legend uk-margin-top\">{props.collectionLegend}</legend>\n\n                        {props.children}\n\n                    </fieldset>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default CollectionForm;","import React from \"react\";\n\nvar uniqid = require('uniqid');\n\nfunction Selector(props) {\n    var elements = props.arrayToMap\n\n    return (\n        <div className=\"uk-margin\">\n            <label className=\"uk-form-label\" htmlFor={props.configObjectValue}>{props.labelText}</label>\n            <select onChange={props.callbackFunction} defaultValue=\"default\" id={props.configObjectValue} className=\"uk-select\">\n                {elements.map( (element) => (\n                    <option id={uniqid()} value={element}>{element}</option>\n                ))}\n            </select>\n        </div>\n    )\n}\n\nexport default Selector","const configValues = {\n    students: [\"Attias, Alessandro\", \"Barnes, Nathan\", \"Bobbitt, Matthew\", \"Bongiorno, Anthony\", \"Boyd, Michael\", \"Brant, Miles\", \"Castro Curry, Diego\",\n    \"Chao Bierhaus, Clara\", \"Che, Micah\", \"Cody, Joshua\", \"Crain, Madi\", \"Cunningham, Jack\", \"Danielson, Kai\", \"Dillon, Ana-Li\", \"Donovan, William\",\n    \"Dwyer, Kelly\", \"Edwardson, Thomas\", \"Ereneta, Ben\", \"Fazzio, Andrew\", \"Foley, Daniel\", \"Fox, John Edmund\", \"Galka, Trevor\", \"Gellman, Mira\", \"Golinski, Daniel\",\n    \"Gorelick, Noah\", \"Heitmann, Adam\", \"Hubbell, Jack\", \"Johnston, Peter\", \"Joslyn, Matthew\", \"Jureidini, Nico\", \"Kantor, Ethan\", \"Kavanaugh-Lynch, Matthew\", \"Krull, Alexander\",\n    \"Lake, Ethan\", \"Lessman, Cameron\", \"Ley-Languren, Sergio\", \"Lynn, Emmett Shaw\", \"Mahoney, Caslyn\", \"Mark, Christopher\", \"Maschal, Charles Ashton\", \"McInnis, Ben\", \"Morales, Dominic\",\n    \"Morewitz, Benjamin\", \"Murphy, Daniel\", \"Owczarz, Adrian\", \"Padgette, Cameron Matthew\", \"Rangan, Govinda\", \"Reiter, Sam\", \"Rogers, Jack\", \"Sofaer, Ezekiel\", \"Sovocool, Natalie\", \"Thomas, Jared\",\n    \"Wright, Julia\", \"Zang, Hannah L.\"],\n    homeworkClubHeaders: [\"Student\", \"Class\", \"Assignment Description\", \"Due Date\", \"Completed\", \"Incompleted\"],\n    times: [\"0\", \".5\", \"1\", \"1.5\", \"2\", \"2.5\", \"3\", \"3.5\", \"4\", \"4.5\", \"5\", \"5.5\", \"6\", \"6.5\", \"7\", \"7.5\", \"8\", \"8.5\", \"9\", \"9.5\", \"10\", \"10.5\", \"11\", \"11.5\", \"12\", \"12.5\", \"13\", \"13.5\", \"14\", \"14.5\", \"15\"],\n    classes: [\"Computer Science Principles\", \"Intro to Technology\"],\n    periods: [\"A\", \"HR\", \"1\", \"2\", \"3\", \"4\", \"lunch\", \"5\", \"6\", \"7\", \"8\"],\n    serverURL: \"https://school-tools-demo-server.herokuapp.com\"\n}\n\nexport default configValues;","import React from \"react\"\n\nimport Selector from \"./Selector.js\";\nimport configValues from \"../config.js\"\n\nimport Swal from 'sweetalert2'\n\n\nclass ParentHomebriding extends React.Component {\n    state = { student: {}, hours: 0, displayedHours: 0 }\n\n    // TODO: make the properties in DB and props name match\n    componentDidMount() {\n        fetch(configValues.serverURL + \"/api/singleStudent\", {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify({ studentId: this.props.studentId })\n        })\n            .then(res => res.json())\n            .then(student => this.setState({ student: student, displayedHours: student.totalHours }))\n    }\n\n\n\n    setHours() {\n        this.setState({ hours: (document.querySelector(\"#homebridingTime\").value) })\n    }\n\n    updateHours() {\n        fetch(configValues.serverURL + \"/api/singleStudent\", {\n            method: 'PUT',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify({ studentId: this.props.studentId, hoursUpdate: this.state.hours })\n        })\n            .then(res => res.json())\n            .then(student => this.setState({ student: student, displayedHours: this.state.displayedHours + this.state.hours }))\n            .then(\n                Swal.fire({\n                    title: 'Submission recieved!',\n                    text: 'Thank you for your submission, you will now be logged out and see your change next time you log in.',\n                    timer: 5000,\n                    timerProgressBar: true,\n                    onBeforeOpen: () => {\n                      Swal.showLoading()\n                    }\n                  }).then(this.props.returnToLogin)\n            )\n    }\n\n    render() {\n        return (\n            <div className=\"uk-width-1-1 uk-flex uk-flex-center\" uk-grid=\"True\">\n                <div className=\"uk-align-center\">\n                    <br />\n                    <br />\n                    <div>\n                        <p className=\"uk-text-lead\">Example Student's homebriding Database</p>\n                    </div>\n                    <br />\n                    <div>\n                        <p className=\"uk-text-small\">{this.state.student.fname + \" \" + this.state.student.lname} has earned {this.state.displayedHours}/320 hours so far!</p>\n                        <p className=\"uk-text-small\">The first term ends on 12/18/20</p>\n                    </div>\n                </div>\n\n\n                <div className=\"\">\n                    <p className=\"uk-text-medium\">Log Hours</p>\n                    <label className=\"uk-margin-right\" htmlFor=\"userName\">Activity:</label>\n                    <input\n                        className=\"uk-input uk-form uk-form-width-medium uk-margin-right\"\n                        id=\"activity\"\n                        type=\"text\"\n                        placeholder=\"Activity\"\n                    />\n\n                    <label className=\"uk-margin-right\" htmlFor=\"pwd\">Date:</label>\n                    <input\n                        className=\"uk-input uk-form uk-form-width-medium uk-margin-right\"\n                        id=\"date\"\n                        type=\"text\"\n                        placeholder=\"Date\"\n                    />\n                    <button onClick={\n                        () =>\n                            Swal.fire({\n                                title: 'Please Confirm Submission',\n                                text: this.state.student.fname + \" will be adding \" + this.state.hours + \" hour/s and have a total of \" + (parseInt(this.state.displayedHours) + parseInt(this.state.hours)) + \" hours upon submission.\",\n                                icon: 'question',\n                                showCancelButton: true,\n                                confirmButtonColor: '#3085d6',\n                                cancelButtonColor: '#d33',\n                                confirmButtonText: 'Submit'\n                            }).then((result) => {\n                                if (result.value) {\n                                    this.updateHours()\n                                }\n                            })\n                    } type=\"button\" className=\"uk-align-right uk-margin-left uk-margin-right uk-button uk-button-primary\">Submit</button>\n\n\n                    <Selector\n                        configObjectValue=\"homebridingTime\"\n                        arrayToMap={configValues.times}\n                        labelText=\"Select amount of time (hours): \"\n                        callbackFunction={() => this.setHours()}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ParentHomebriding","import React from 'react'\n\nimport configValues from '../config.js';\n\nclass ParentDetentionCenterView extends React.Component {\n    state = { detentions: [] }\n\n    componentDidMount() {\n        fetch(configValues.serverURL + \"/api/detentionCenter\", {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify({ studentId: \"5eb0a14c8ec536f27b41a3b0\" })\n        })\n            .then(res => res.json())\n            .then(detentions => this.setState({ detentions }))\n    }\n\n    render() {\n        return (\n            <div>\n                <ul>\n                    {this.state.detentions.map(detention => <li>{\"period = \" + detention.period + \", reason = \" + detention.reason}</li>)}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default ParentDetentionCenterView","import React from 'react'\n\nimport configValues from '../config.js';\n\n\nclass ParentHomeworkClubView extends React.Component {\n    state = { homeworkClubs: [] }\n\n    componentDidMount() {\n        fetch(configValues.serverURL + \"/api/homeworkClub\", {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify({ studentId: \"5eb0a14c8ec536f27b41a3b0\" })\n        })\n            .then(res => res.json())\n            .then(homeworkClubs => this.setState({homeworkClubs}))\n    }\n// this.setState({ homeworkClubs })\n\n    render() {\n        return (\n            <div>\n                <ul>\n                    {this.state.homeworkClubs.map(clubEntry => <li>{\"type = \" + clubEntry.type + \", reason = \" + clubEntry.reason}</li>)}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default ParentHomeworkClubView","import React from \"react\";\n\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nimport Nav from \"./Nav.js\";\nimport CollectionForm from './CollectionForm.js'\n\n// tab components\nimport ParentHomebriding from './ParentHomebriding.js';\nimport ParentDetentionCenterView from './ParentDetentionCenterView.js';\nimport ParentHomeworkClubView from './ParentHomeworkClubView.js';\n\n// React libraries\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\n// <button onClick={this.props.callbackFunction} type=\"button\"  className=\"uk-align-right uk-margin-right uk-button uk-button-primary\">Log In</button>\n\n// TODO: convert to class and use fetch with setState to --> then passdown state values as props\nfunction ParentView(props) {\n    return (\n        <div>\n            <CollectionForm>\n                <ParentHomebriding studentId={props.studentId} returnToLogin={props.returnToLogin}/>\n            </CollectionForm>\n        </div >\n    )\n}\n\nexport default ParentView;\n\n/*\n<Router>\n                <Nav />\n\n                <Switch>\n                    <Route path=\"/detentioncenter\">\n                        <ParentDetentionCenterView />\n                    </Route>\n\n                    <Route path=\"/homeworkclub\">\n                        <ParentHomeworkClubView />\n                    </Route>\n\n                    <Route path=\"/homebriding\">\n                        <ParentHomebriding studentId={props.studentId} />\n                    </Route>\n\n                    <Route path=\"/supporttickets\" >\n                        <h1>Coming soon!</h1>\n                    </Route>\n\n                    <Route path=\"/guides\" >\n                        <h1>Coming soon!</h1>\n                    </Route>\n\n                    <Route path=\"/procedures\" >\n                        <h1>Coming soon!</h1>\n                    </Route>\n\n                    <Route path=\"/home\" >\n                        <CollectionForm collectionLegend={\"\"}>\n                            Welcome to the Orion Academy Web Tool!\n                        </CollectionForm>\n\n                    </Route>\n                </Switch>\n\n            </Router>\n*/","import React from 'react'\n\nimport LoginMenu from './LoginMenu.js';\nimport ParentView from \"./ParentView.js\";\n\nimport CollectionForm from './CollectionForm.js'\n\nimport configValues from '../config.js';\n\n\n\n// React libraries\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\n//// **** INITIALIZATIONS **** ////\n// sets up the uniqid hashing function for use with component id's\nvar uniqid = require('uniqid');\nvar Loader = require('react-loader');\n\n\n// TODO: add a link to the 'home' route from here so that\n// users land on / and can't leave in the form of a conditional\n// rendering function (call ParentView on success with StudentID passed in)\n\n// goal: parents start in login menu, upon success something allows them into the\n// parent view with the StudentID as a prop\n\nclass ParentClient extends React.Component {\n    state = { username: \"\", password: \"\", loginState: \"\", parent: false, loaded: true }\n\n    \n\n    componentDidMount() {\n        console.log(\"mount \", this.state.parent)\n        this.setState({\n            loginState:\n                <CollectionForm >\n                    <LoginMenu\n                        callbackButton={() => this.authCheck()}\n                        callbackOnChangeUsername={(event) => this.updateUsernameState(event)}\n                        callbackOnChangePassword={(event) => this.updatePasswordState(event)}\n                    />\n                </CollectionForm>\n        })\n    }\n\n    // updates the state on keystroke change\n    updateUsernameState(event) {\n        this.setState({ username: event.target.value })\n    }\n\n    updatePasswordState(event) {\n        this.setState({ password: event.target.value })\n    }\n\n    // TODO: update the fetch to search for a parent username and password!\n    async authCheck() {\n        this.setState({ loaded: false })\n\n        await fetch(configValues.serverURL + \"/parents\", {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify({ username: this.state.username, password: this.state.password })\n        })\n            .then(res => res.json())\n            .then(parent => {\n                if (parent != false) {\n                    console.log(\"auth\", parent)\n                    this.setState({ parent })\n                }\n            })\n            .then(() => this.conditionalCheck())\n\n        await this.setState({loaded: true})\n    }\n\n    // performs auth check\n    conditionalCheck() {\n        //console.log(this.state)\n        // TODO: instead of using false here, make a prop in parent called userType and have it = parent\n        if (this.state.parent != false) {\n            this.setState({ loginState: <ParentView studentId={this.state.parent.student} returnToLogin={() => this.returnToLogin()}/> })\n        } else {\n            alert(this.state.condition + \" is not a registered username!\")\n        }\n    }\n\n    // returns user back to login menu\n    returnToLogin() {\n        console.log(\"confirmed work\")\n        this.setState({\n            loginState:\n                <CollectionForm >\n                    <LoginMenu\n                        callbackButton={() => this.authCheck()}\n                        callbackOnChangeUsername={(event) => this.updateUsernameState(event)}\n                        callbackOnChangePassword={(event) => this.updatePasswordState(event)}\n                    />\n                </CollectionForm>\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    <Switch>\n                        <Route path=\"/\" >\n                            <Loader loaded={this.state.loaded}>\n                                {this.state.loginState}\n                            </Loader>\n                        </Route>\n                    </Switch>\n                </Router>\n            </div >\n        )\n    }\n}\n\nexport default ParentClient","import React from 'react'\nimport ParentClient from './components/ParentClient.js'\n\nfunction App() {\n    return (\n        <div>\n\n            <ParentClient />\n\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}